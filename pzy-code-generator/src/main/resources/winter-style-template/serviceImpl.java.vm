package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${cfg.DAO}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import org.pzy.opensource.mybatisplus.service.ServiceTemplateImpl;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.validation.annotation.Validated;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.cache.annotation.CacheConfig;

/**
 * $!{table.name} 表相关服务实现类
 *
 * @author ${author}
 * @since ${date}
 */
@Service
@Validated
@Transactional(rollbackFor = Exception.class, propagation = Propagation.REQUIRED)
@CacheConfig(cacheNames = ${table.serviceImplName}.CACHE_NAME)
public class ${table.serviceImplName} extends ServiceTemplateImpl<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    public static final String CACHE_NAME = "${table.serviceImplName}";

    @CacheEvict(allEntries = true, beforeInvocation = true)
    @Override
    public void clearCache() {
        if (log.isDebugEnabled()) {
            log.debug(String.format("清除[%s]服务类缓存!", this.getClass().getName()));
        }
    }
}
